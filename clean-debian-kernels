#! /bin/bash
# Script developped by Adrien.D from Linuxtricks
# Tested on Linux Mint 20.3 + Ubuntu 22.04 + Debian SID

set -u;	# Provoque une erreur sur l'utilisation d'une variable non déclaré. (donc oblige la déclaration des variables)

if [ $(id -u) -ne 0 ]
then
	echo "Script must be run as root"
	exit 1
fi


DISTRIBTYPE=$(egrep ^ID= /etc/os-release | awk -F= '{ print $2 ;}')

if [ "$DISTRIBTYPE" = "linuxmint" ]
then
	DISTRIBTYPE=$(egrep ^ID_LIKE= /etc/os-release | awk -F= '{ print $2 ;}')
fi

#echo "Distribution type : $DISTRIBTYPE"

KERNELUSED=$(uname -r)
KERNELLIST=$(dpkg -l | egrep  ii.*linux-image | awk '{ print $2; }')
KERNELTOREMOVE=""

#echo "$LINENO:### Creation de la liste des paquets  ###"; # Comme c'est un echo de debug autant précisez la ligne (utile pour les long scripts)

declare kernelPrefixe='';

case "$DISTRIBTYPE" in
	'ubuntu') kernelPrefixe="linux-image-generic";	;;
	'debian') kernelPrefixe="linux-image-amd64";	;;
esac

if [ -n "$kernelPrefixe" ]
then
	echo "Distribution linux non supportée. Votre distrib: $KERNELUSED.";
	exit 1;	# Normalement la sortie 1 est à évité car trop générique
fi


#echo "Kernel list : $KERNELLIST"
for k in "$KERNELLIST"
do
	if [ "$k" != "$kernelPrefixe" ] && [ "$k" != "linux-image-$KERNELUSED" ]
	then
		#KERNELTOREMOVE="$k $KERNELTOREMOVE"
		KERNELTOREMOVE+=" $k";	# Alternative (mais ajoute le nouveau kernel à la suite et non avant)
	fi
done


#echo "$LINENO: Kernel list to remove : $KERNELTOREMOVE"

# suppression de toutes les occurances de 'linux-image- '
#KERNELVERSIONSTOREMOVE=$(echo $KERNELTOREMOVE | sed -e 's/linux-image-//g')
KERNELVERSIONSTOREMOVE="${KERNELTOREMOVE//linux-image-)";	

#echo "Kernel version to remove : $KERNELVERSIONSTOREMOVE"

DPKGKERNELS=""
for v in "$KERNELVERSIONSTOREMOVE"
do
	case "$DISTRIBTYPE" in
		'ubuntu')
			#vNOGENERIC=$(echo $v | sed -e 's/-generic//')
			 vNOGENERIC=${v//-generic};	# Suppression de TOUTES les occurences de '-generic'
			DPKGKERNELS="linux-headers-$v linux-image-$v linux-modules-$v linux-modules-extra-$v linux-headers-$vNOGENERIC $DPKGKERNELS"
	;;
		'debian')
			#vNOARCH=$(echo $v | sed -e 's/-amd64/-common/')
			 vNOARCH=${v//-common};	# Suppression de TOUTES les occurences de '-common'
			DPKGKERNELS="linux-headers-$v linux-image-$v linux-modules-$v linux-modules-extra-$v linux-headers-$vNOARCH $DPKGKERNELS"
	;;
	esac
done
#echo "Commande dpkg : dpkg --remove $DPKGKERNELS"

#echo "########################"

echo "Distribution type : $DISTRIBTYPE"
echo "Active kernel : $KERNELUSED"
echo "Kernel version to remove : $KERNELVERSIONSTOREMOVE"

if [ -n "$DPKGKERNELS" ]
then
	read -p "Lets go ? Type YES if OK : " ANWSERGO
	if [ "$ANWSERGO" = "YES" ]
	then
		dpkg --remove $DPKGKERNELS
	
		for v in $KERNELVERSIONSTOREMOVE
		do
			rm -rf /lib/modules/$v
			rm -rf /usr/src/linux-headers-$v
			
			case "$DISTRIBTYPE" in
				'ubuntu')
					#vNOGENERIC=$(echo $v | sed -e 's/-generic//')
					 vNOGENERIC=${v//-generic};
					rm -rf /usr/src/linux-headers-$vNOGENERIC
				;;
				'debian')
					#vNOARCH=$(echo $v | sed -e 's/-amd64/-common/')
					 vNOARCH=${v//-common};
					rm -rf /usr/src/linux-headers-$vNOARCH
				;;
			esac
		done
	fi
else
	echo "No kernels to remove"
fi
